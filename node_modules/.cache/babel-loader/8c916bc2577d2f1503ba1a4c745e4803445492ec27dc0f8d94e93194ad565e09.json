{"ast":null,"code":"var _jsxFileName = \"/Users/christylee/Desktop/christy-ly/christy-game-platform/src/games/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./TicTacToe.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [gridSize, setGridSize] = useState(null);\n  const [winningLineLength, setWinningLineLength] = useState(null);\n  const [board, setBoard] = useState([]);\n  const [isXNext, setIsXNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [inputGridSize, setInputGridSize] = useState('');\n  const [inputWinningLineLength, setInputWinningLineLength] = useState('');\n  useEffect(() => {\n    if (gridSize) {\n      setBoard(Array(gridSize * gridSize).fill(null));\n    }\n  }, [gridSize]);\n  const getWinningLines = (size, winLength) => {\n    const lines = [];\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push(Array.from({\n          length: winLength\n        }, (_, i) => row * size + col + i));\n      }\n    }\n    for (let col = 0; col < size; col++) {\n      for (let row = 0; row <= size - winLength; row++) {\n        lines.push(Array.from({\n          length: winLength\n        }, (_, i) => (row + i) * size + col));\n      }\n    }\n    for (let row = 0; row <= size - winLength; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push(Array.from({\n          length: winLength\n        }, (_, i) => (row + i) * size + col + i));\n        lines.push(Array.from({\n          length: winLength\n        }, (_, i) => (row + i) * size + (col + winLength - 1 - i)));\n      }\n    }\n    return lines;\n  };\n  const checkWinner = board => {\n    const lines = getWinningLines(gridSize, winningLineLength);\n    for (let line of lines) {\n      const [first, ...rest] = line;\n      if (board[first] && rest.every(index => board[index] === board[first])) {\n        setWinningSquares(line);\n        return board[first];\n      }\n    }\n    return null;\n  };\n  const handleClick = index => {\n    if (board[index] || winner) return;\n    const newBoard = [...board];\n    newBoard[index] = isXNext ? \"X\" : \"O\";\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n    const gameWinner = checkWinner(newBoard);\n    if (gameWinner) setWinner(gameWinner);\n  };\n  const resetGame = () => {\n    setGridSize(null);\n    setWinningLineLength(null);\n    setBoard([]);\n    setIsXNext(true);\n    setWinner(null);\n    setWinningSquares([]);\n    setInputGridSize('');\n    setInputWinningLineLength('');\n  };\n  const restartGame = () => {\n    setBoard(Array(gridSize * gridSize).fill(null));\n    setIsXNext(true);\n    setWinner(null);\n    setWinningSquares([]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const size = parseInt(inputGridSize, 10);\n    const winLength = parseInt(inputWinningLineLength, 10);\n    if (size >= 3 && size <= 10 && winLength >= 3 && winLength <= size) {\n      setGridSize(size);\n      setWinningLineLength(winLength);\n      setBoard(Array(size * size).fill(null));\n      setWinner(null);\n      setWinningSquares([]);\n      setIsXNext(true);\n    } else {\n      alert(\"Grid size (3-10) & Winning line (3-Grid size) only!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-6\",\n    children: gridSize === null ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex flex-col items-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Grid Size (3-10)\",\n        value: inputGridSize,\n        onChange: e => setInputGridSize(e.target.value),\n        className: \"p-2 border-2 border-gray-500 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Winning Line (3+)\",\n        value: inputWinningLineLength,\n        onChange: e => setInputWinningLineLength(e.target.value),\n        className: \"p-2 border-2 border-gray-500 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-6 py-2 bg-blue-500 text-white font-semibold rounded\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative grid-container\",\n        style: {\n          gridTemplateColumns: `repeat(${gridSize}, 1fr)`\n        },\n        children: [board.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `square ${winningSquares.includes(index) ? \"winning-square\" : \"\"}`,\n          onClick: () => handleClick(index),\n          children: board[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hash-line horizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hash-line vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-6 py-2 bg-yellow-500 text-white font-semibold rounded mr-4\",\n          onClick: restartGame,\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-6 py-2 bg-green-500 text-white font-semibold rounded\",\n          onClick: resetGame,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"mvtAhEmz5Sk8m/PKbEDAqjCps2Y=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","gridSize","setGridSize","winningLineLength","setWinningLineLength","board","setBoard","isXNext","setIsXNext","winner","setWinner","winningSquares","setWinningSquares","inputGridSize","setInputGridSize","inputWinningLineLength","setInputWinningLineLength","Array","fill","getWinningLines","size","winLength","lines","row","col","push","from","length","_","i","checkWinner","line","first","rest","every","index","handleClick","newBoard","gameWinner","resetGame","restartGame","handleSubmit","e","preventDefault","parseInt","alert","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","map","includes","onClick","_c","$RefreshReg$"],"sources":["/Users/christylee/Desktop/christy-ly/christy-game-platform/src/games/TicTacToe.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./TicTacToe.css\"; // Import the CSS file\n\nconst TicTacToe = () => {\n  const [gridSize, setGridSize] = useState(null);\n  const [winningLineLength, setWinningLineLength] = useState(null);\n  const [board, setBoard] = useState([]);\n  const [isXNext, setIsXNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [inputGridSize, setInputGridSize] = useState('');\n  const [inputWinningLineLength, setInputWinningLineLength] = useState('');\n\n  useEffect(() => {\n    if (gridSize) {\n      setBoard(Array(gridSize * gridSize).fill(null));\n    }\n  }, [gridSize]);\n\n  const getWinningLines = (size, winLength) => {\n    const lines = [];\n\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push(Array.from({ length: winLength }, (_, i) => row * size + col + i));\n      }\n    }\n\n    for (let col = 0; col < size; col++) {\n      for (let row = 0; row <= size - winLength; row++) {\n        lines.push(Array.from({ length: winLength }, (_, i) => (row + i) * size + col));\n      }\n    }\n\n    for (let row = 0; row <= size - winLength; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push(Array.from({ length: winLength }, (_, i) => (row + i) * size + col + i));\n        lines.push(Array.from({ length: winLength }, (_, i) => (row + i) * size + (col + winLength - 1 - i)));\n      }\n    }\n\n    return lines;\n  };\n\n  const checkWinner = (board) => {\n    const lines = getWinningLines(gridSize, winningLineLength);\n\n    for (let line of lines) {\n      const [first, ...rest] = line;\n      if (board[first] && rest.every((index) => board[index] === board[first])) {\n        setWinningSquares(line);\n        return board[first];\n      }\n    }\n    return null;\n  };\n\n  const handleClick = (index) => {\n    if (board[index] || winner) return;\n\n    const newBoard = [...board];\n    newBoard[index] = isXNext ? \"X\" : \"O\";\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n\n    const gameWinner = checkWinner(newBoard);\n    if (gameWinner) setWinner(gameWinner);\n  };\n\n  const resetGame = () => {\n    setGridSize(null);\n    setWinningLineLength(null);\n    setBoard([]);\n    setIsXNext(true);\n    setWinner(null);\n    setWinningSquares([]);\n    setInputGridSize('');\n    setInputWinningLineLength('');\n  };\n\n  const restartGame = () => {\n    setBoard(Array(gridSize * gridSize).fill(null));\n    setIsXNext(true);\n    setWinner(null);\n    setWinningSquares([]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const size = parseInt(inputGridSize, 10);\n    const winLength = parseInt(inputWinningLineLength, 10);\n\n    if (size >= 3 && size <= 10 && winLength >= 3 && winLength <= size) {\n      setGridSize(size);\n      setWinningLineLength(winLength);\n      setBoard(Array(size * size).fill(null));\n      setWinner(null);\n      setWinningSquares([]);\n      setIsXNext(true);\n    } else {\n      alert(\"Grid size (3-10) & Winning line (3-Grid size) only!\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center p-6\">\n      {gridSize === null ? (\n        <form onSubmit={handleSubmit} className=\"flex flex-col items-center space-y-4\">\n          <input\n            type=\"number\"\n            placeholder=\"Grid Size (3-10)\"\n            value={inputGridSize}\n            onChange={(e) => setInputGridSize(e.target.value)}\n            className=\"p-2 border-2 border-gray-500 rounded\"\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Winning Line (3+)\"\n            value={inputWinningLineLength}\n            onChange={(e) => setInputWinningLineLength(e.target.value)}\n            className=\"p-2 border-2 border-gray-500 rounded\"\n          />\n          <button type=\"submit\" className=\"px-6 py-2 bg-blue-500 text-white font-semibold rounded\">\n            Start Game\n          </button>\n        </form>\n      ) : (\n        <>\n          <div className=\"relative grid-container\" style={{ gridTemplateColumns: `repeat(${gridSize}, 1fr)` }}>\n            {board.map((_, index) => (\n              <div\n                key={index}\n                className={`square ${winningSquares.includes(index) ? \"winning-square\" : \"\"}`}\n                onClick={() => handleClick(index)}\n              >\n                {board[index]}\n              </div>\n            ))}\n            {/* Hash (#) Effect */}\n            <div className=\"hash-line horizontal\"></div>\n            <div className=\"hash-line vertical\"></div>\n          </div>\n          <div className=\"mt-4\">\n            <button className=\"px-6 py-2 bg-yellow-500 text-white font-semibold rounded mr-4\" onClick={restartGame}>\n              Restart Game\n            </button>\n            <button className=\"px-6 py-2 bg-green-500 text-white font-semibold rounded\" onClick={resetGame}>\n              Reset Game\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}