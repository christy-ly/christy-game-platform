{"ast":null,"code":"var _jsxFileName = \"/Users/christylee/Desktop/christy-ly/christy-game-platform/src/games/TicTacToe/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TicTacToe.css\"; // Import styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const SYMBOL_X = \"X\";\n  const SYMBOL_O = \"O\";\n  const [gridSize, setGridSize] = useState(3);\n  const [winCondition, setWinCondition] = useState(3);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [squares, setSquares] = useState(Array(gridSize * gridSize).fill(null));\n  const [winner, setWinner] = useState(null);\n  const [currentTurn, setCurrentTurn] = useState(SYMBOL_X);\n  const [winnerLine, setWinnerLine] = useState(Array());\n  const resetGame = () => {\n    setSquares(Array(gridSize * gridSize).fill(null));\n    setCurrentTurn(SYMBOL_X);\n    setWinner(null);\n  };\n  const restartGame = () => {\n    setGridSize(3);\n    setWinCondition(3);\n    setIsGameStarted(false);\n    resetGame();\n  };\n  const drawSymbol = index => {\n    if (squares[index] || winner) return;\n    const newSquares = squares.slice();\n    newSquares[index] = currentTurn;\n    setSquares(newSquares);\n    setCurrentTurn(currentTurn === SYMBOL_X ? SYMBOL_O : SYMBOL_X);\n    setWinner(checkWinner(newSquares));\n  };\n  const checkWinner = board => {\n    const winningLines = generateWinPatterns(gridSize, winCondition);\n    for (let line of winningLines) {\n      const values = line.map(i => board[i]);\n      if (values.every(v => v && v === values[0])) {\n        setWinnerLine(line);\n        return values[0];\n      }\n    }\n    return null;\n  };\n  const generateWinPatterns = (size, winLength) => {\n    let lines = [];\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push([...Array(winLength)].map((_, i) => row * size + col + i));\n      }\n    }\n    for (let col = 0; col < size; col++) {\n      for (let row = 0; row <= size - winLength; row++) {\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col));\n      }\n    }\n    for (let row = 0; row <= size - winLength; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col + i));\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col + winLength - 1 - i));\n      }\n    }\n    return lines;\n  };\n  const renderOningGameScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [winner ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold text-purple-900\",\n          children: [\"Winner: \", winner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl font-bold text-purple-900\",\n          children: [\"Turn: \", currentTurn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container\",\n          style: {\n            gridTemplateColumns: `repeat(${gridSize}, 80px)`\n          },\n          children: [squares.map((square, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `square ${winner && winnerLine.includes(i) ? \"winning-square\" : \"\"}`,\n            onClick: () => drawSymbol(i),\n            children: square\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hash-line horizontal-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hash-line horizontal-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hash-line vertical-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hash-line vertical-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-700\",\n            onClick: resetGame,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4 p-4\",\n    children: renderOningGameScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"8Yj8TbLafdwlUxMPt8Dc2jUcuZc=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","SYMBOL_X","SYMBOL_O","gridSize","setGridSize","winCondition","setWinCondition","isGameStarted","setIsGameStarted","squares","setSquares","Array","fill","winner","setWinner","currentTurn","setCurrentTurn","winnerLine","setWinnerLine","resetGame","restartGame","drawSymbol","index","newSquares","slice","checkWinner","board","winningLines","generateWinPatterns","line","values","map","i","every","v","size","winLength","lines","row","col","push","_","renderOningGameScreen","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","square","includes","onClick","_c","$RefreshReg$"],"sources":["/Users/christylee/Desktop/christy-ly/christy-game-platform/src/games/TicTacToe/TicTacToe.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./TicTacToe.css\"; // Import styles\n\nconst TicTacToe = () => {\n  const SYMBOL_X = \"X\";\n  const SYMBOL_O = \"O\";\n  const [gridSize, setGridSize] = useState(3);\n  const [winCondition, setWinCondition] = useState(3);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [squares, setSquares] = useState(Array(gridSize * gridSize).fill(null));\n  const [winner, setWinner] = useState(null);\n  const [currentTurn, setCurrentTurn] = useState(SYMBOL_X);\n  const [winnerLine, setWinnerLine] = useState(Array());\n\n  const resetGame = () => {\n    setSquares(Array(gridSize * gridSize).fill(null));\n    setCurrentTurn(SYMBOL_X);\n    setWinner(null);\n  };\n\n  const restartGame = () => {\n    setGridSize(3);\n    setWinCondition(3);\n    setIsGameStarted(false);\n    resetGame();\n  };\n\n  const drawSymbol = (index) => {\n    if (squares[index] || winner) return;\n    const newSquares = squares.slice();\n    newSquares[index] = currentTurn;\n    setSquares(newSquares);\n    setCurrentTurn(currentTurn === SYMBOL_X ? SYMBOL_O : SYMBOL_X);\n    setWinner(checkWinner(newSquares));\n  };\n\n  const checkWinner = (board) => {\n    const winningLines = generateWinPatterns(gridSize, winCondition);\n    for (let line of winningLines) {\n      const values = line.map((i) => board[i]);\n      if (values.every((v) => v && v === values[0])) {\n        setWinnerLine(line);\n        return values[0];\n      }\n    }\n    return null;\n  };\n\n  const generateWinPatterns = (size, winLength) => {\n    let lines = [];\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push([...Array(winLength)].map((_, i) => row * size + col + i));\n      }\n    }\n    for (let col = 0; col < size; col++) {\n      for (let row = 0; row <= size - winLength; row++) {\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col));\n      }\n    }\n    for (let row = 0; row <= size - winLength; row++) {\n      for (let col = 0; col <= size - winLength; col++) {\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col + i));\n        lines.push([...Array(winLength)].map((_, i) => (row + i) * size + col + winLength - 1 - i));\n      }\n    }\n    return lines;\n  };\n\n  const renderOningGameScreen = () => {\n    return (\n      <div>\n        {\n          <>\n          {winner ? <p className=\"text-xl font-bold text-purple-900\">Winner: {winner}</p>\n          :\n          <p className=\"text-xl font-bold text-purple-900\">Turn: {currentTurn}</p>}\n          <div className=\"grid-container\" style={{ gridTemplateColumns: `repeat(${gridSize}, 80px)` }}>\n          { squares.map((square, i) => (\n            <button\n              key={i}\n              className={`square ${winner && winnerLine.includes(i) ? \"winning-square\" : \"\"}`}\n              onClick={() => drawSymbol(i)}\n            >\n              {square}\n            </button>\n          ))}\n\n          {/* Todo: Hash Effect */}\n          <div className=\"hash-line horizontal-1\"></div>\n          <div className=\"hash-line horizontal-2\"></div>\n          <div className=\"hash-line vertical-1\"></div>\n          <div className=\"hash-line vertical-2\"></div>\n        </div>\n\n          <div className=\"flex space-x-4\">\n            <button className=\"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-700\" onClick={resetGame}>\n              Restart\n            </button>\n          </div>\n        </>\n        }\n      </div>\n    );\n  };\n  \n\n  return (\n    <div className=\"flex flex-col items-center space-y-4 p-4\">\n      {renderOningGameScreen()}\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}